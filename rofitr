#!/usr/bin/env bash
# Copyright (C) 2019 Yusuf Aktepe <yusuf@yusufaktepe.com>

## Set defaults
# SOURCE="en"               # source language code
TARGET="en"               # translation language code
ENGINE="google"           # google, yandex or bing
# LOCALE="en"               # translator language ($LANG var. by default)
# SPEAK_SOURCE="false"      # speak the source (true/false)
SPEAK_TRANSLATION="true" # speak the translation (true/false)



## Rofi required options
PROMPT_TR="translate"
PROMPT_HIST="translate history"
PROMPT_DEL="delete"
CLR_RESULT="#ebdbb2" # text color for translation
CLR1="#b8bb26"
CLR2="#1d2021"


help() {
cat <<EOF
# <u>Translate with defaults</u>
> <span background="$CLR1" foreground="$CLR2"><b><i>text</i></b></span>
# <u>Override default SOURCE and TARGET</u>
> <span background="$CLR1" foreground="$CLR2"><b>en:es <i>text</i></b></span>
# <u>Auto-detect SOURCE</u>
> <span background="$CLR1" foreground="$CLR2"><b>:en <i>text</i></b></span>
<s>                                             </s>
<u>Command line:</u>
$ rofitr :ru <i>text</i> <span foreground="$CLR1">=> </span>Translate into Russian
$ rofitr -s       <span foreground="$CLR1">=> </span>Translate from primary selection
EOF
}

rofi_cmd() {
	rofi -dmenu  "$@"
}

crow_cmd() {
	[ -n "$ENGINE" ] && crowparams+=(-e "$ENGINE")
	[ -n "$LOCALE" ] && crowparams+=(-l "$LOCALE")
	[ "$SPEAK_TRANSLATION" = "true" ] && crowparams+=(-p)
	[ "$SPEAK_SOURCE" = "true" ] && crowparams+=(-u)

	crow "${crowparams[@]}" "$@"
}

format() {
	clean="s/^[\t]$//;/^$/d;s/\&/\&amp\;/g;s/</\&lt\;/g;s/>/\&gt\;/g;/ - translation options:$/d"
	bold="s/^\(auxiliary verb\|abbreviation\|adjective\|adverb\|article\|conjunction\|contraction\|exclamation\|interjection\|noun\|particle\|prefix\|preposition\|pronoun\|suffix\|symbol\|verb\)$/<b>&<\/b>/"
	trl="s/^\[ .*-\&gt\;.* \]$/<span foreground=\"$CLR1\"><i>&<\/i><\/span>/"
	case "$1" in
		*) sed -e "$clean" -e "$bold" -e "$trl";;
	esac
}

cklang() {
	lslang=(
		"af" "sq" "am" "ar" "hy" "az" "eu" "ba" "be" "bn" "bs" "bg" "ca" "yue" "ceb"
		"zh-CN" "zh-TW" "co" "hr" "cs" "da" "nl" "en" "eo" "et" "fj" "fil" "fi" "fr"
		"fy" "gl" "ka" "de" "el" "gu" "ht" "ha" "haw" "he" "mrj" "hi" "hmn" "hu" "is"
		"ig" "id" "ga" "it" "ja" "jw" "kn" "kk" "km" "tlh" "tlh-Qaak" "ko" "ku" "ky" "lo"
		"la" "lv" "apc" "lt" "lb" "mk" "mg" "ms" "ml" "mt" "mi" "mr" "mhr" "mn" "my" "ne"
		"no" "ny" "pap" "ps" "fa" "pl" "pt" "pa" "otq" "ro" "ru" "sm" "gd" "sr-Cyrl"
		"sr-Latin" "st" "sn" "sd" "si" "sk" "sl" "so" "es" "su" "sw" "sv" "tl" "ty" "tg"
		"ta" "tt" "te" "th" "to" "tr" "udm" "uk" "ur" "uz" "vi" "cy" "xh" "yi" "yo" "yua"
	)
	printf '%s\n' "${lslang[@]}" | grep -x "$1"
}

esc() { sed 's|[][\\/.*^$]|\\&|g' <<< "$1" ;}

return_result() {
	input="$(rofi_cmd -p "$PROMPT_TR" -l 0  -mesg "<span color='$CLR_RESULT'>$result</span>")"
}

[ -n "$*" ] && input="$*" || input="$(rofi_cmd -p "$PROMPT_TR" )"
while [ -n "$input" ]; do
	case $input in
		"?")
			input="$(rofi_cmd -p "usage" -l 0 -mesg "<span color='$CLR_RESULT'>$(help)</span>")" ;;
		??*:??*)
			SOURCE=$(cklang "$(echo "$input" | awk -F':' '{print $1}')")
			TARGET=$(cklang "$(echo "$input" | awk -F'[:| ]' '{print $2}')")
			input=$(echo "$input" | cut -d' ' -f2-)
			result=$(crow_cmd -s "${SOURCE:-en}" -t "${TARGET:-tr}" -- "$input" | format)
			unset SOURCE TARGET
		 	return_result ;;
		:??*)
			TARGET=$(cklang "$(echo "$input" | awk -F'[:| ]' '{print $2}')")
			input=$(echo "$input" | cut -d' ' -f2-)
			result=$(crow_cmd -t "${TARGET:-tr}" -- "$input" | format)
			unset TARGET
		 	return_result ;;
		*)
			result=$(crow_cmd -s "${SOURCE:-en}" -t "${TARGET:-tr}" -- "$input" | format)
			return_result ;;
	esac
done
